# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

jobs:
- job: 'Test'
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
#      Python38:
#        python.version: '3.8'
#      Python39:
#        python.version: '3.9'
      Python310:
        python.version: '3.10'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: python hello_world.py

  - task: PythonScript@0
    inputs:
      scriptSource: 'inline'
      script: |
        print('Hello world 1')
        print('Hello world 2')

  - task: PythonScript@0
    inputs:
      scriptSource: inline
      script: |
        import sys
        print ('Executing script file is:', str(sys.argv[0]))
        print ('The arguments are:', str(sys.argv))
        import argparse
        parser = argparse.ArgumentParser()
        parser.add_argument("--world", help="Provide the name of the world to greet.")
        args = parser.parse_args()
        print ('Hello ', args.world)
      arguments: --world Venus

  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'

  - script: pip install -r requirements.txt
    displayName: 'Install requirements'

  - script: |
      pip install pytest pytest-azurepipelines
      pip install pytest-cov
      pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'

  - task: CopyFiles@2
    inputs:
      Contents: |
        hello_world.py
        hello_app/**
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: UniversalPackages@0
    displayName: Publish a Universal Package
    inputs:
      command: 'publish'
      publishDirectory: '$(Build.ArtifactStagingDirectory)'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: '82973bed-f04e-4356-bf49-3532210777ba/e524834d-9071-4272-8e2b-030fd20df1cc'
      vstsFeedPackagePublish: 'fabrikam-study-package'
      versionOption: 'minor'
      packagePublishDescription: 'package for studying Publish a Universal Package'

#  - script: |
#      python -m pip install --upgrade pip
#      pip install -r requirements.txt
#    displayName: 'Install dependencies'

#  - script: |
#      pip install pytest pytest-azurepipelines
#      pytest
#    displayName: 'pytest'
